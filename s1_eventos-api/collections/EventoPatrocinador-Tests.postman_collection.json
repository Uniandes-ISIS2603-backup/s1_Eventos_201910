{
	"info": {
		"_postman_id": "f1f700b7-1552-4883-902e-933ffde67c14",
		"name": "EventoPatrocinador Tests",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Crear Evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "694741e6-4794-48fd-b32b-d790963ac9b0",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_e\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"name": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"nombre\": \"Evento1\",\n        \"descripcion\": \"experto habla de la importancia de los videojuegos en la juventud\",\n\t\t \"detalles\": \"se recomienda uso de portatil\",\n        \"categoria\": \"Informatica\",\n        \"fechainicio\": \"2020-02-23\",\n        \"fechaFin\": \"2020-02-23\",\n        \"privado\":0, \n        \"capacidadMaxima\":50, \n        \"boletasDisponibles\": 50\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un patrocinador",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "694741e6-4794-48fd-b32b-d790963ac9b0",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"nombre\": \"Kupa\",\n        \"imagen\": \"https://www.kupa.co/assets/img/logo-kupa-negro-512.png\",\n        \"rango\": \"Silver\",\n        \"descripcion\": \"Kupa, un amigo que te acompania\"\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/patrocinadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"patrocinadores"
					]
				},
				"description": "Crea un nuevo patrocinador. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Crear un patrocinador 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "694741e6-4794-48fd-b32b-d790963ac9b0",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"nombre\": \"Universidad Nacional\",\n        \"imagen\": \"https://www.kupa.co/assets/img/logo-kupa-negro-512.png\",\n        \"rango\": \"Gold\",\n        \"descripcion\": \"Universidad Nacional de Colombia\"\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/patrocinadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"patrocinadores"
					]
				},
				"description": "Crea un nuevo patrocinador. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"name": "Agregar patrocinador a evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5295fcb5-7252-463d-b81a-5124c1a067be",
						"exec": [
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"{{new_id_p}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Agregar patrocinador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3c06212-e39e-4bc3-9fd1-8abbd1c29ace",
						"exec": [
							"tests[\"No se deberia asociar el usuario ya que el patrocinador no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinadores/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un patrocinador de un evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e73fe8-8e21-4eae-a1bf-973c5ccfbfbc",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"{{new_id_p}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener patrocinador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e73fe8-8e21-4eae-a1bf-973c5ccfbfbc",
						"exec": [
							"tests[\"No se deberia obtener ningun patrocinador ya que no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinadores/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener patrocinador no asociado",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10a04ef5-aca6-43ae-bd0a-b1006aa19487",
						"exec": [
							"tests[\"No se puede obtener un patrocinador que no esta asociado\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"La patrocinador no está asociado al evento\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/{{new_id_p2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"{{new_id_p2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener patrocinadores evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49c94c15-1d54-43ee-adef-aec230710223",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"tests[\"patrocinadores count - evento\"] = data.length >= 1;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar patrocinador a evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7c5215a-ed1c-498e-9d19-9f5570cfd17d",
						"exec": [
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \t\"id\": {{new_id_e}},\n        \"nombre\": \"Kupa\",\n        \"imagen\": \"https://www.kupa.co/assets/img/logo-kupa-negro-512.png\",\n        \"rango\": \"Silver\",\n        \"descripcion\": \"Kupa, un amigo que te acompania\"\n},\n{\n    \t\"id\": {{new_id_e2}},\n        \"nombre\": \"Universidad Nacional\",\n        \"imagen\": \"https://www.kupa.co/assets/img/logo-kupa-negro-512.png\",\n        \"rango\": \"Gold\",\n        \"descripcion\": \"Universidad Nacional de Colombia\"\n}]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores"
					]
				}
			},
			"response": []
		},
		{
			"name": "Asociar un patrocinador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f1389a0-da68-45bc-90aa-eb08f3c8ac36",
						"exec": [
							"tests[\"No se pueden asociar los patrocinadores ya que estos no existen\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinadores/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \t\"id\": 0,\n        \"nombre\": \"Kupa\",\n        \"imagen\": \"https://www.kupa.co/assets/img/logo-kupa-negro-512.png\",\n        \"rango\": \"Silver\",\n        \"descripcion\": \"Kupa, un amigo que te acompania\"\n}\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar patrocinador a evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9510b6cd-b566-4cfa-b16f-9c783800176d",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"{{new_id_p}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar patrocinador a evento que no existe ",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el evento no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /eventos/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/0/patrocinadores/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"0",
						"patrocinadores",
						"{{new_id_p}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar patrocinador que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db442b05-4aea-4f64-9db1-a28176069f5e",
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el patrocinador no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /patrocinadores/0 no existe.\");"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}/patrocinadores/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}",
						"patrocinadores",
						"0"
					]
				}
			},
			"response": []
		},
		{
			"name": "Borrar un patrocinador",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d403e21b-3da3-4bbc-9b8a-9a2285ec0292",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/patrocinadores/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"patrocinadores",
						"{{new_id_p}}"
					]
				},
				"description": "Borra un patrocinador. Se envía el id del patrocinador creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"name": "Borrar Evento",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d403e21b-3da3-4bbc-9b8a-9a2285ec0292",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/s1_eventos-api/api/eventos/{{new_id_e}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"s1_eventos-api",
						"api",
						"eventos",
						"{{new_id_e}}"
					]
				}
			},
			"response": []
		}
	]
}